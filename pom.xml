<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>farao-parent-ws</artifactId>
        <groupId>com.farao-community.farao</groupId>
        <version>1.9.0</version>
    </parent>

    <artifactId>gridcapa-swe-csa</artifactId>
    <version>2.3.0</version>
    <packaging>pom</packaging>
    <name>gridcapa-swe-csa</name>
    <description>Service responsible for running a dichotomy process for swe csa based on a network, a crac and a timestamp,
        and returns the best rao result while taking into account some dichotomy stop criterion from configurations.
    All files transfers pass through amazon s3 buckets, and request/response of this microservice are in json api format.
    </description>

    <modules>
        <module>csa-runner-app</module>
        <module>csa-runner-api</module>
    </modules>

    <properties>
        <!-- BUSINESS DEPENDENCIES -->
        <farao.dependencies.version>1.38.1</farao.dependencies.version>
        <gridcapa.rao.runner.version>1.33.0</gridcapa.rao.runner.version>
        <gridcapa.swe.commons.version>1.31.1</gridcapa.swe.commons.version>

        <!-- TECHNICAL DEPENDENCIES -->
        <commons.lang.version>3.11</commons.lang.version>
        <commons.io.version>2.12.0</commons.io.version>
        <jsonapi.converter.version>0.11</jsonapi.converter.version>
        <mockito.core.version>5.2.0</mockito.core.version>
        <logstash.version>7.0.1</logstash.version>
        <awaitility.version>3.0.0</awaitility.version>
        <jackson.datatype.version>2.12.2</jackson.datatype.version>

    </properties>

    <build>
        <pluginManagement>
            <plugins>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- BUSINESS DEPENDENCIES -->
            <dependency>
                <groupId>com.farao-community.farao</groupId>
                <artifactId>gridcapa-rao-runner-spring-boot-starter</artifactId>
                <version>${gridcapa.rao.runner.version}</version>
            </dependency>
            <dependency>
                <groupId>com.farao-community.farao</groupId>
                <artifactId>gridcapa-swe-commons</artifactId>
                <version>${gridcapa.swe.commons.version}</version>
            </dependency>
            <!-- TECHNICAL DEPENDENCIES -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.datatype.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jasminb</groupId>
                <artifactId>jsonapi-converter</artifactId>
                <version>${jsonapi.converter.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- TEST DEPENDENCIES -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- IMPORTED DEPENDENCIES -->
            <dependency>
                <groupId>com.farao-community.farao</groupId>
                <artifactId>farao-dependencies</artifactId>
                <version>${farao.dependencies.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
